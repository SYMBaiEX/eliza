"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[57467],{21847:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"summaries/plugins/nft-generation","title":"@elizaos/plugin-nft-generation","description":"Purpose","source":"@site/packages/summaries/plugins/nft-generation.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/nft-generation","permalink":"/packages/summaries/plugins/nft-generation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"NFT Collections Plugin","permalink":"/packages/summaries/plugins/nft-collections"},"next":{"title":"plugin-nkn","permalink":"/packages/summaries/plugins/nkn"}}');var l=i(31085),a=i(71184);const o={},s="@elizaos/plugin-nft-generation",r={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Links",id:"links",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"elizaosplugin-nft-generation",children:"@elizaos/plugin-nft-generation"})}),"\n",(0,l.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,l.jsx)(n.p,{children:"NFT collection generation plugin for Eliza OS that enables NFT creation, collection management, and verification on the Solana blockchain."}),"\n",(0,l.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Automated NFT collection creation"}),"\n",(0,l.jsx)(n.li,{children:"AI-powered image generation for NFTs"}),"\n",(0,l.jsx)(n.li,{children:"Collection logo generation"}),"\n",(0,l.jsx)(n.li,{children:"Metadata creation and management"}),"\n",(0,l.jsx)(n.li,{children:"AWS S3 integration for asset storage"}),"\n",(0,l.jsx)(n.li,{children:"Solana blockchain integration"}),"\n",(0,l.jsx)(n.li,{children:"NFT verification system"}),"\n",(0,l.jsx)(n.li,{children:"Automatic nonce management"}),"\n",(0,l.jsx)(n.li,{children:"Comprehensive error handling"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"bun install @elizaos/plugin-nft-generation\n"})}),"\n",(0,l.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsx)(n.p,{children:"Requires environment variables for:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Solana Configuration (keys, cluster settings)"}),"\n",(0,l.jsx)(n.li,{children:"AWS Configuration (access keys, region, bucket)"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,l.jsx)(n.p,{children:"Provides REST API endpoints for NFT operations and exposes handlers for collection creation, NFT minting, and verification that integrate with ElizaOS runtime."}),"\n",(0,l.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { createCollection, createNFT, verifyNFT } from './handlers';\n\nconst runtime = initializeRuntime();\n\n(async () => {\n  // Step 1: Create Collection\n  const collectionResult = await createCollection({\n    runtime,\n    collectionName: 'MyUniqueCollection',\n  });\n\n  // Step 2: Create an NFT in the Collection\n  const nftResult = await createNFT({\n    runtime,\n    collectionName: 'MyUniqueCollection',\n    collectionAddress: collectionResult.address,\n    collectionAdminPublicKey: collectionResult.collectionInfo.adminPublicKey,\n    collectionFee: 0.01,\n    tokenId: 1,\n  });\n\n  // Step 3: Verify the NFT\n  const verificationResult = await verifyNFT({\n    runtime,\n    collectionAddress: collectionResult.address,\n    NFTAddress: nftResult.address,\n  });\n})();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://docs.solana.com/",children:"Solana Documentation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://solana.com/developers",children:"Solana Developer Portal"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://solscan.io/",children:"Solana Network Dashboard"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/solana-labs/solana",children:"Solana GitHub Repository"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(14041);const l={},a=t.createContext(l);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);