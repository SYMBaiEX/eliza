"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[33579],{51571:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"summaries/adapters/sqlite","title":"SQLite Adapter","description":"Purpose","source":"@site/packages/summaries/adapters/sqlite.md","sourceDirName":"summaries/adapters","slug":"/summaries/adapters/sqlite","permalink":"/packages/summaries/adapters/sqlite","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Qdrant Adapter for ElizaOS","permalink":"/packages/summaries/adapters/qdrant"},"next":{"title":"Unmaintained","permalink":"/packages/summaries/adapters/sqljs"}}');var n=t(31085),s=t(71184);const r={},l="SQLite Adapter",o={},d=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2},{value:"Example Usage",id:"example-usage",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"sqlite-adapter",children:"SQLite Adapter"})}),"\n",(0,n.jsx)(i.h2,{id:"purpose",children:"Purpose"}),"\n",(0,n.jsx)(i.p,{children:"A SQLite database adapter for ElizaOS that provides persistent storage capabilities with vector similarity search support."}),"\n",(0,n.jsx)(i.h2,{id:"key-features",children:"Key Features"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Full SQLite database implementation of ElizaOS database interface"}),"\n",(0,n.jsx)(i.li,{children:"Vector similarity search via sqlite-vec extension"}),"\n",(0,n.jsx)(i.li,{children:"JSON validation and foreign key constraints"}),"\n",(0,n.jsx)(i.li,{children:"Built-in caching system"}),"\n",(0,n.jsx)(i.li,{children:"Comprehensive transaction support with circuit breaker pattern"}),"\n",(0,n.jsx)(i.li,{children:"Support for storing and retrieving various data types including memories, accounts, goals, and knowledge base"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"npm install @elizaos-plugins/adapter-sqlite\n"})}),"\n",(0,n.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"SQLITE_FILE"}),": Path to the SQLite database file (default: ",(0,n.jsx)(i.code,{children:"./data/db.sqlite"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:["Default database location is in a ",(0,n.jsx)(i.code,{children:"data"})," directory in project root"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"integration",children:"Integration"}),"\n",(0,n.jsxs)(i.p,{children:["Implements the ",(0,n.jsx)(i.code,{children:"IDatabaseAdapter"})," interface and extends the ",(0,n.jsx)(i.code,{children:"DatabaseAdapter"})," base class to provide a lightweight, file-based storage solution for ElizaOS."]}),"\n",(0,n.jsx)(i.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"import sqlitePlugin from '@elizaos-plugins/adapter-sqlite';\nimport { IAgentRuntime } from '@elizaos/core';\n\n// Initialize with ElizaOS runtime\nfunction initializeAgent(runtime: IAgentRuntime) {\n  runtime.use(sqlitePlugin);\n}\n"})})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},71184:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>l});var a=t(14041);const n={},s=a.createContext(n);function r(e){const i=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(s.Provider,{value:i},e.children)}}}]);