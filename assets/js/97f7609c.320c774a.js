"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[18576],{22179:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"summaries/clients/twitter","title":"Eliza Twitter/X Client","description":"Purpose","source":"@site/packages/summaries/clients/twitter.md","sourceDirName":"summaries/clients","slug":"/summaries/clients/twitter","permalink":"/packages/summaries/clients/twitter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Telegram Client Plugin for ElizaOS","permalink":"/packages/summaries/clients/telegram"},"next":{"title":"XMTP Client package","permalink":"/packages/summaries/clients/xmtp"}}');var r=n(31085),s=n(71184);const a={},l="Eliza Twitter/X Client",o={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"eliza-twitterx-client",children:"Eliza Twitter/X Client"})}),"\n",(0,r.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,r.jsx)(t.p,{children:"This package provides Twitter/X integration for the Eliza AI agent."}),"\n",(0,r.jsx)(t.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Post generation and management"}),"\n",(0,r.jsx)(t.li,{children:"Interaction handling (mentions, replies)"}),"\n",(0,r.jsx)(t.li,{children:"Search functionality"}),"\n",(0,r.jsx)(t.li,{children:"Twitter Spaces support with STT/TTS capabilities"}),"\n",(0,r.jsx)(t.li,{children:"Media handling (images, videos)"}),"\n",(0,r.jsx)(t.li,{children:"Approval workflow via Discord (optional)"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["Create or edit ",(0,r.jsx)(t.code,{children:".env"})," file with Twitter API credentials, client configuration, post generation settings, action processing settings, Spaces configuration, and approval workflow settings."]}),"\n",(0,r.jsx)(t.h2,{id:"integration",children:"Integration"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { TwitterClientInterface } from '@elizaos/twitter';\n\nconst twitterPlugin = {\n  name: 'twitter',\n  description: 'Twitter client',\n  clients: [TwitterClientInterface],\n};\n\n// Register with your Eliza runtime\nruntime.registerPlugin(twitterPlugin);\n"})}),"\n",(0,r.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(t.p,{children:"The client can automatically generate and post tweets, handle interactions (mentions, replies, quote tweets, direct messages), search Twitter for relevant topics, create and manage Twitter Spaces, and utilize an optional Discord-based approval system for tweets."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},71184:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var i=n(14041);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);