"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[66231],{36190:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"summaries/plugins/llama","title":"@elizaos/plugin-llama","description":"Purpose","source":"@site/packages/summaries/plugins/llama.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/llama","permalink":"/packages/summaries/plugins/llama","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-lit","permalink":"/packages/summaries/plugins/lit"},"next":{"title":"Massa Plugin","permalink":"/packages/summaries/plugins/massa"}}');var i=l(31085),s=l(71184);const t={},r="@elizaos/plugin-llama",o={},u=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"elizaosplugin-llama",children:"@elizaos/plugin-llama"})}),"\n",(0,i.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsx)(n.p,{children:"Core LLaMA plugin for Eliza OS that provides local Large Language Model capabilities."}),"\n",(0,i.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Local LLM Support: Run LLaMA models locally"}),"\n",(0,i.jsx)(n.li,{children:"GPU Acceleration: CUDA support for faster inference"}),"\n",(0,i.jsx)(n.li,{children:"Flexible Configuration: Customizable parameters for text generation"}),"\n",(0,i.jsx)(n.li,{children:"Message Queuing: Efficient handling of multiple requests"}),"\n",(0,i.jsx)(n.li,{children:"Automatic Model Management: Download and verification systems"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos/plugin-llama\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"The plugin can be configured through environment variables:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-env",children:"LLAMALOCAL_PATH=your_model_storage_path\nOLLAMA_MODEL=optional_ollama_model_name\n"})}),"\n",(0,i.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { createLlamaPlugin } from '@elizaos/plugin-llama';\n\n// Initialize the plugin\nconst llamaPlugin = createLlamaPlugin();\n\n// Register with Eliza OS\nelizaos.registerPlugin(llamaPlugin);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},71184:(e,n,l)=>{l.d(n,{R:()=>t,x:()=>r});var a=l(14041);const i={},s=a.createContext(i);function t(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);