"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[80219],{71184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var a=i(14041);const s={},t=a.createContext(s);function r(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(t.Provider,{value:n},e.children)}},71645:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"summaries/plugins/openai","title":"@elizaos/plugin-openai","description":"Purpose","source":"@site/packages/summaries/plugins/openai.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/openai","permalink":"/packages/summaries/plugins/openai","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-open-weather","permalink":"/packages/summaries/plugins/open-weather"},"next":{"title":"@elizaos/plugin-para","permalink":"/packages/summaries/plugins/para"}}');var s=i(31085),t=i(71184);const r={},l="@elizaos/plugin-openai",o={},p=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2},{value:"Example Usage",id:"example-usage",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"elizaosplugin-openai",children:"@elizaos/plugin-openai"})}),"\n",(0,s.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsx)(n.p,{children:"A plugin for OpenAI integration, providing automated text generation capabilities."}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Generate text using OpenAI's GPT models"}),"\n",(0,s.jsx)(n.li,{children:"Customize prompts for context-aware content generation"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @elizaos/plugin-openai\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The plugin requires the following environment variable:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"OPENAI_API_KEY=your_openai_api_key\n"})}),"\n",(0,s.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,s.jsx)(n.p,{children:"Import and register the plugin in your Eliza configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { openaiPlugin } from '@elizaos/plugin-openai';\n\nexport default {\n  plugins: [openaiPlugin],\n  // ... other configuration\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const result = await generateTextAction.handler(runtime, message, state);\nconsole.log(result.text); // Output generated by OpenAI\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);