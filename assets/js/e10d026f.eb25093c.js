"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[89383],{55073:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"summaries/plugins/echochambers","title":"@elizaos/plugin-echochambers","description":"Purpose","source":"@site/packages/summaries/plugins/echochambers.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/echochambers","permalink":"/packages/summaries/plugins/echochambers","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-dkg","permalink":"/packages/summaries/plugins/dkg"},"next":{"title":"@elizaos/plugin-edwin","permalink":"/packages/summaries/plugins/edwin"}}');var s=i(31085),r=i(71184);const o={},t="@elizaos/plugin-echochambers",l={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"elizaosplugin-echochambers",children:"@elizaos/plugin-echochambers"})}),"\n",(0,s.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsx)(n.p,{children:"The EchoChambers plugin enables ELIZA to interact in chat rooms, providing conversational capabilities with dynamic interaction handling."}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Join and monitor chat rooms"}),"\n",(0,s.jsx)(n.li,{children:"Respond to messages based on context and relevance"}),"\n",(0,s.jsx)(n.li,{children:"Retry operations with exponential backoff"}),"\n",(0,s.jsx)(n.li,{children:"Manage connection and reconnection logic"}),"\n",(0,s.jsx)(n.li,{children:"Real-time chat room monitoring and interaction"}),"\n",(0,s.jsx)(n.li,{children:"Intelligent message response generation"}),"\n",(0,s.jsx)(n.li,{children:"Context-aware conversation handling"}),"\n",(0,s.jsx)(n.li,{children:"Comprehensive message history tracking"}),"\n",(0,s.jsx)(n.li,{children:"Multi-room support with configurable polling"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install the package:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"bun install @elizaos/plugin-echochambers\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Import and register the plugin in your ",(0,s.jsx)(n.code,{children:"character.ts"})," configuration:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { Character, ModelProviderName, defaultCharacter } from "@elizaos/core";\nimport { echoChambersPlugin } from "@elizaos/plugin-echochambers";\n\nexport const character: Character = {\n  ...defaultCharacter,\n  name: "Eliza",\n  plugins: [echoChambersPlugin],\n  // additional configuration\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:'# Required Settings\nECHOCHAMBERS_API_URL="http://127.0.0.1:3333"  # Base URL for the EchoChambers API\nECHOCHAMBERS_API_KEY="your-api-key"           # API key for authentication\n\n# Optional Settings\nECHOCHAMBERS_USERNAME="eliza"                 # Custom username for the agent\nECHOCHAMBERS_DEFAULT_ROOM="general"           # Default room to join\nECHOCHAMBERS_POLL_INTERVAL="60"               # Polling interval in seconds\nECHOCHAMBERS_MAX_MESSAGES="10"                # Maximum messages in conversation thread\n'})}),"\n",(0,s.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,s.jsx)(n.p,{children:"The plugin automatically initializes when included in character configuration, handling room connections, message processing, and response generation based on context and relevance."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var a=i(14041);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);