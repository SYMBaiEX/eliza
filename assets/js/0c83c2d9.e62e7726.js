"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[85005],{1064:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"summaries/plugins/irys","title":"@elizaos/plugin-irys","description":"Purpose","source":"@site/packages/summaries/plugins/irys.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/irys","permalink":"/packages/summaries/plugins/irys","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Code In Plugin For Eliza","permalink":"/packages/summaries/plugins/iq6900"},"next":{"title":"Isaac X Plugin for ElizaOS","permalink":"/packages/summaries/plugins/isaacx"}}');var a=i(31085),s=i(71184);const t={},l="@elizaos/plugin-irys",o={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Links",id:"links",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"elizaosplugin-irys",children:"@elizaos/plugin-irys"})}),"\n",(0,a.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,a.jsx)(n.p,{children:"A plugin for ElizaOS that enables decentralized data storage and retrieval using Irys, a programmable datachain platform."}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Decentralized Data Storage: Store data permanently on the Irys network"}),"\n",(0,a.jsx)(n.li,{children:"Data Retrieval: Fetch stored data using GraphQL queries"}),"\n",(0,a.jsx)(n.li,{children:"Multi-Agent Support: Enable data sharing and collaboration between agents"}),"\n",(0,a.jsx)(n.li,{children:"Ethereum Integration: Built-in support for Ethereum wallet authentication"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun add @elizaos/plugin-irys\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.p,{children:"Required environment variables:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"EVM_WALLET_PRIVATE_KEY"}),": Your EVM wallet private key"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"AGENTS_WALLET_PUBLIC_KEYS"}),": Public keys of agents to retrieve data (comma-separated)"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"An EVM (Base network) wallet with Base Sepolia ETH tokens is required for storing data larger than 100KB."}),"\n",(0,a.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,a.jsx)(n.p,{children:"The plugin provides an IrysService with methods for workers and providers to store and retrieve data on the Irys network. It enables decentralized knowledge base creation and multi-agent collaboration through a system of Providers, Orchestrators, and Workers."}),"\n",(0,a.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const { IrysService } = require('@elizaos/plugin-irys');\n\nconst irysService = runtime.getService(ServiceType.IRYS);\nconst data = 'Provide Liquidity to the ETH pool on Stargate';\nconst result = await irysService.workerUploadDataOnIrys(\n  data,\n  IrysDataType.OTHER,\n  IrysMessageType.DATA_STORAGE,\n  ['DeFi'],\n  ['Stargate', 'LayerZero']\n);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.irys.xyz/",children:"Irys Documentation"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://trophe.net/article/A_Decentralized_Framework_for_Multi-Agent_Systems_Using_Datachain_Technology.pdf",children:"A Decentralized Framework for Multi-Agent Systems Using Datachain Technology"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(14041);const a={},s=r.createContext(a);function t(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);