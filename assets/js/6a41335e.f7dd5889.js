"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[81933],{31529:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"summaries/plugins/goat","title":"@elizaos/plugin-goat","description":"Purpose","source":"@site/packages/summaries/plugins/goat.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/goat","permalink":"/packages/summaries/plugins/goat","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-gitcoin-passport","permalink":"/packages/summaries/plugins/gitcoin-passport"},"next":{"title":"@elizaos/plugin-goplus","permalink":"/packages/summaries/plugins/goplus"}}');var a=i(31085),l=i(71184);const t={},r="@elizaos/plugin-goat",o={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Integration",id:"integration",level:2},{value:"Links",id:"links",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"elizaosplugin-goat",children:"@elizaos/plugin-goat"})}),"\n",(0,a.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,a.jsx)(n.p,{children:"A plugin for integrating blockchain capabilities through the GOAT (Great Onchain Agent Toolkit) framework within the ElizaOS ecosystem."}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Blockchain interaction capabilities including wallets and token management"}),"\n",(0,a.jsx)(n.li,{children:"Support for multiple chains and protocols"}),"\n",(0,a.jsx)(n.li,{children:"Actions for sending and checking balances of ETH and USDC"}),"\n",(0,a.jsx)(n.li,{children:"Token swapping using KIM protocol"}),"\n",(0,a.jsx)(n.li,{children:"Expandable with additional GOAT plugins"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun install @elizaos/plugin-goat\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"EVM_PRIVATE_KEY=<Your EVM wallet private key>\nEVM_PROVIDER_URL=<Your RPC provider URL (e.g., Infura, Alchemy)>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,a.jsx)(n.p,{children:"The plugin integrates GOAT with Eliza, enabling agents to interact with various blockchain protocols. Users can configure chains, specify actions, and add plugins for different protocols."}),"\n",(0,a.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://ohmygoat.dev/",children:"GOAT Documentation"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://ohmygoat.dev/chains",children:"Available Chains"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://ohmygoat.dev/chains-wallets-plugins",children:"Chains, Wallets & Plugins"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.crossmint.com/wallets/smart-wallets/overview",children:"Smart Wallet Documentation"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var s=i(14041);const a={},l=s.createContext(a);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);