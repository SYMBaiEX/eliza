"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[28633],{60027:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"summaries/plugins/multichain","title":"@elizaos/plugin-multichain","description":"Purpose","source":"@site/packages/summaries/plugins/multichain.md","sourceDirName":"summaries/plugins","slug":"/summaries/plugins/multichain","permalink":"/packages/summaries/plugins/multichain","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"@elizaos/plugin-movement","permalink":"/packages/summaries/plugins/movement"},"next":{"title":"@elizaos/plugin-multiversx","permalink":"/packages/summaries/plugins/multiversx"}}');var a=i(31085),t=i(71184);const l={},r="@elizaos/plugin-multichain",o={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Multi-Chain Transfer",id:"multi-chain-transfer",level:3},{value:"Cross-Chain Swap",id:"cross-chain-swap",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"elizaosplugin-multichain",children:"@elizaos/plugin-multichain"})}),"\n",(0,a.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,a.jsx)(n.p,{children:"Cross-chain integration plugin for Eliza OS that enables seamless token transfers and swaps across multiple blockchain networks using Chain Signatures and NEAR Intents technologies."}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Cross-chain token transfers"}),"\n",(0,a.jsx)(n.li,{children:"Multi-chain token swaps"}),"\n",(0,a.jsx)(n.li,{children:"Support for major blockchain networks (Bitcoin, Ethereum, EVM chains, Cosmos ecosystem coming soon)"}),"\n",(0,a.jsx)(n.li,{children:"Chain Signatures integration"}),"\n",(0,a.jsx)(n.li,{children:"NEAR Intents for optimized execution"}),"\n",(0,a.jsx)(n.li,{children:"Portfolio tracking across chains (coming soon)"}),"\n",(0,a.jsx)(n.li,{children:"Comprehensive error handling"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun install @elizaos/plugin-multichain\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.p,{children:"Requires environment variables for each supported chain including NEAR, Ethereum, and various EVM chains, plus global settings like DEFAULT_SLIPPAGE."}),"\n",(0,a.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,a.jsx)(n.h3,{id:"multi-chain-transfer",children:"Multi-Chain Transfer"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute({\n  action: 'MULTI_CHAIN_TRANSFER',\n  content: {\n    chain: 'BTC',\n    networkId: 'testnet',\n    token: null, // Native BTC\n    amount: '0.1',\n    recipient: 'tb1qmw3xw3y8jtm4054w02kfz58tmf6pcse02twrh8',\n  },\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"cross-chain-swap",children:"Cross-Chain Swap"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const result = await eliza.execute({\n  action: 'CROSS_CHAIN_SWAP',\n  content: {\n    sourceChain: 'ETH',\n    targetChain: 'COSMOS',\n    inputToken: 'ETH',\n    outputToken: 'ATOM',\n    amount: '1.0',\n    recipient: 'cosmos1...',\n  },\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var s=i(14041);const a={},t=s.createContext(a);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);