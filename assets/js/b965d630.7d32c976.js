"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[7744],{28972:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"summaries/clients/github","title":"Client-GitHub for Eliza Framework","description":"Purpose","source":"@site/packages/summaries/clients/github.md","sourceDirName":"summaries/clients","slug":"/summaries/clients/github","permalink":"/packages/summaries/clients/github","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ElizaOS Farcaster Client","permalink":"/packages/summaries/clients/farcaster"},"next":{"title":"@elizaos/client-instagram","permalink":"/packages/summaries/clients/instagram"}}');var r=t(31085),s=t(71184);const a={},l="Client-GitHub for Eliza Framework",c={},o=[{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Integration",id:"integration",level:2},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"client-github-for-eliza-framework",children:"Client-GitHub for Eliza Framework"})}),"\n",(0,r.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,r.jsx)(n.p,{children:"A component of the Eliza framework designed to interact with GitHub repositories, providing functionalities to clone repositories, manage branches, create pull requests, and maintain file-based knowledge for Eliza agents."}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Repository Management: Clone, pull, and switch branches"}),"\n",(0,r.jsx)(n.li,{children:"File Processing: Generate agent memories from repository files"}),"\n",(0,r.jsx)(n.li,{children:"Pull Request Management: Create and manage pull requests programmatically"}),"\n",(0,r.jsx)(n.li,{children:"Commit Operations: Stage, commit, and push files"}),"\n",(0,r.jsx)(n.li,{children:"Knowledge Base Integration: Convert repository content into agent memories"}),"\n",(0,r.jsx)(n.li,{children:"Branch Management: Flexible branch switching and creation"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bun add @elizaos/client-github\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Environment variables required:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Required"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GITHUB_OWNER"})}),(0,r.jsx)(n.td,{children:"Owner of the GitHub repository"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GITHUB_REPO"})}),(0,r.jsx)(n.td,{children:"Repository name"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GITHUB_BRANCH"})}),(0,r.jsxs)(n.td,{children:["Target branch (default: ",(0,r.jsx)(n.code,{children:"main"}),")"]}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GITHUB_PATH"})}),(0,r.jsx)(n.td,{children:"Path to focus on within the repo"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GITHUB_API_TOKEN"})}),(0,r.jsx)(n.td,{children:"GitHub API token for authentication"}),(0,r.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,r.jsxs)(n.p,{children:["The client leverages GitHub's REST API via the ",(0,r.jsx)(n.code,{children:"@octokit/rest"})," library and integrates with Eliza framework through the ",(0,r.jsx)(n.code,{children:"@elizaos/core"})," dependency."]}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Initialization\nimport { GitHubClientInterface } from '@elizaos/client-github';\nconst client = await GitHubClientInterface.start(runtime);\n\n// Creating Memories\nawait client.createMemoriesFromFiles();\n\n// Creating Pull Requests\nawait client.createPullRequest(\n  'Feature: Add new functionality',\n  'feature/new-feature',\n  [\n    {\n      path: 'src/feature.ts',\n      content: '// New feature implementation',\n    },\n  ],\n  'Implements new functionality with tests'\n);\n\n// Direct Commits\nawait client.createCommit('Update configuration', [\n  {\n    path: 'config.json',\n    content: JSON.stringify(config, null, 2),\n  },\n]);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(14041);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);